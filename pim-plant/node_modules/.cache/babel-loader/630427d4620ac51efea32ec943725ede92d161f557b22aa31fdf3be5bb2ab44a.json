{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\WSF Tech\\\\repo github\\\\Pim-Plant\\\\PIM\\\\pim-plant\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport logo from './logo.svg';\nimport Camera from './components/camera';\nimport './App.css';\n\n// Fonction pour vérifier si une journée complète s'est écoulée depuis la dernière connexion\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction is24HoursPassed(lastConnectionDate) {\n  const TWENTY_FOUR_HOURS = 24 * 60 * 60 * 1000; // en millisecondes\n  const now = new Date();\n  const diff = now - new Date(lastConnectionDate);\n  return diff >= TWENTY_FOUR_HOURS;\n}\n\n// Fonction pour mettre à jour le compteur et la date de dernière connexion\nfunction updateCounterAndDate() {\n  let lastConnectionDate = localStorage.getItem('lastConnectionDate');\n  let connectionCount = localStorage.getItem('connectionCount');\n  if (!lastConnectionDate || is24HoursPassed(lastConnectionDate)) {\n    // Réinitialiser le compteur et mettre à jour la date si 24 heures se sont écoulées\n    connectionCount = 1;\n    lastConnectionDate = new Date().toISOString();\n  } else {\n    // Incrémenter le compteur si moins de 24 heures se sont écoulées\n    connectionCount = parseInt(connectionCount) + 1;\n  }\n\n  // Mettre à jour les valeurs dans le stockage local\n  localStorage.setItem('lastConnectionDate', lastConnectionDate);\n  localStorage.setItem('connectionCount', connectionCount);\n\n  // Afficher le compteur\n  console.log(\"Nombre de connexions depuis 24 heures :\", connectionCount);\n}\n\n// Appel de la fonction lors de la connexion de l'utilisateur\nupdateCounterAndDate();\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Camera, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","Camera","jsxDEV","_jsxDEV","is24HoursPassed","lastConnectionDate","TWENTY_FOUR_HOURS","now","Date","diff","updateCounterAndDate","localStorage","getItem","connectionCount","toISOString","parseInt","setItem","console","log","App","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/WSF Tech/repo github/Pim-Plant/PIM/pim-plant/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport Camera from './components/camera';\nimport './App.css';\n\n// Fonction pour vérifier si une journée complète s'est écoulée depuis la dernière connexion\nfunction is24HoursPassed(lastConnectionDate) {\n  const TWENTY_FOUR_HOURS = 24 * 60 * 60 * 1000; // en millisecondes\n  const now = new Date();\n  const diff = now - new Date(lastConnectionDate);\n  return diff >= TWENTY_FOUR_HOURS;\n}\n\n// Fonction pour mettre à jour le compteur et la date de dernière connexion\nfunction updateCounterAndDate() {\n  let lastConnectionDate = localStorage.getItem('lastConnectionDate');\n  let connectionCount = localStorage.getItem('connectionCount');\n\n  if (!lastConnectionDate || is24HoursPassed(lastConnectionDate)) {\n      // Réinitialiser le compteur et mettre à jour la date si 24 heures se sont écoulées\n      connectionCount = 1;\n      lastConnectionDate = new Date().toISOString();\n  } else {\n      // Incrémenter le compteur si moins de 24 heures se sont écoulées\n      connectionCount = parseInt(connectionCount) + 1;\n  }\n\n  // Mettre à jour les valeurs dans le stockage local\n  localStorage.setItem('lastConnectionDate', lastConnectionDate);\n  localStorage.setItem('connectionCount', connectionCount);\n\n  // Afficher le compteur\n  console.log(\"Nombre de connexions depuis 24 heures :\", connectionCount);\n}\n\n// Appel de la fonction lors de la connexion de l'utilisateur\nupdateCounterAndDate();\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <Camera />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,eAAeA,CAACC,kBAAkB,EAAE;EAC3C,MAAMC,iBAAiB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EAC/C,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,IAAI,GAAGF,GAAG,GAAG,IAAIC,IAAI,CAACH,kBAAkB,CAAC;EAC/C,OAAOI,IAAI,IAAIH,iBAAiB;AAClC;;AAEA;AACA,SAASI,oBAAoBA,CAAA,EAAG;EAC9B,IAAIL,kBAAkB,GAAGM,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;EACnE,IAAIC,eAAe,GAAGF,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EAE7D,IAAI,CAACP,kBAAkB,IAAID,eAAe,CAACC,kBAAkB,CAAC,EAAE;IAC5D;IACAQ,eAAe,GAAG,CAAC;IACnBR,kBAAkB,GAAG,IAAIG,IAAI,CAAC,CAAC,CAACM,WAAW,CAAC,CAAC;EACjD,CAAC,MAAM;IACH;IACAD,eAAe,GAAGE,QAAQ,CAACF,eAAe,CAAC,GAAG,CAAC;EACnD;;EAEA;EACAF,YAAY,CAACK,OAAO,CAAC,oBAAoB,EAAEX,kBAAkB,CAAC;EAC9DM,YAAY,CAACK,OAAO,CAAC,iBAAiB,EAAEH,eAAe,CAAC;;EAExD;EACAI,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEL,eAAe,CAAC;AACzE;;AAEA;AACAH,oBAAoB,CAAC,CAAC;AAGtB,SAASS,GAAGA,CAAA,EAAG;EACb,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAQiB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BlB,OAAA;QAAKmB,GAAG,EAAEtB,IAAK;QAACoB,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDxB,OAAA;QAAAkB,QAAA,GAAG,OACI,eAAAlB,OAAA;UAAAkB,QAAA,EAAM;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,wBAC/B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJxB,OAAA;QACEiB,SAAS,EAAC,UAAU;QACpBQ,IAAI,EAAC,qBAAqB;QAC1BC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAAAT,QAAA,EAC1B;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACTxB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACI,EAAA,GApBQZ,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}